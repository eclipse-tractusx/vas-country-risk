###############################################################
# Copyright (c) 2022,2023 BMW Group AG
# Copyright (c) 2022,2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################


countryRiskFrontend:
  # -- Number of replicas of a Kubernetes deployment
  replicaCount: 1

  image:
    registry: "tractusx"
    # -- Name of the docker image
    name: "vas-country-risk"
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""

  certificate:
    # -- Hostname for the certificate
    host: "localhost"

  # -- Name of the backend service
  appName: vas-country-risk-frontend

  # -- List of secrets to be used
  imagePullSecrets: []
  # -- Annotations to be added to the running pod
  podAnnotations: {}

  # -- Configuration for security-related options of the running pod
  podSecurityContext:
    # -- Set the file system group ID for all containers in the pod
    fsGroup: 2000

  # Spring profiles under which the application should run
  springProfiles:
    - dev

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    # -- Specifies if processes running inside the container can gain more privileges than its initial user
    allowPrivilegeEscalation: false
    # -- Specifies whether the process inside the container should run as a non-root user
    runAsNonRoot: true
    # -- Specifies the user ID that the process inside the container should run
    runAsUser: 101
    # -- Specifies the group ID that the process inside the container should run
    runAsGroup: 3000
    # -- Specifies Seccomp profile
    seccompProfile:
      type: RuntimeDefault
    # -- Capabilities that the process inside the container should have
    capabilities:
      drop:
        - ALL

  # -- Service that should be created for the pod
  service:
    # -- Type of service to be used
    type: ClusterIP
    # -- Service port
    port: 8080

  # -- Specifies whether autoscaling should be enabled for the pod
  autoscaling:
    enabled: false

  ingress:
    # -- Ingress enabled or not
    enabled: false
    # -- Class name
    className:
    annotations: {}


  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
  resources:
    # -- Maximum amount of resources that the deployment should be able to consume
    limits:
      cpu: 800m
      memory: 2Gi
    # -- Minimum amount of resources that the deployment should be guaranteed to receive
    requests:
      cpu: 300m
      memory: 1Gi

  # -- Node placement constraints
  nodeSelector: {}

  # -- Pod toleration constraints
  tolerations: []

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                # -- Match Pod rules
                - key: app.kubernetes.io/name
                  operator: DoesNotExist
            # -- Key that is used to determine the topology of the cluster
            topologyKey: kubernetes.io/hostname

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
  # -- Determines if a pod is still alive or not
  livenessProbe:
    failureThreshold: 3
    # -- Number of seconds to wait before performing the first liveness probe
    initialDelaySeconds: 10
    # -- Number of seconds to wait between consecutive probes
    periodSeconds: 1000
    # -- Number of consecutive successful probes before a pod is considered healthy
    successThreshold: 1
    # -- Number of seconds after which a liveness probe times out
    timeoutSeconds: 1000
  # -- Determine when a pod is ready to start accepting requests
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 1000
    successThreshold: 1
    timeoutSeconds: 1000

  # -- Defines the client secret and client ID
  applicationSecret:
    enabled: false

  configmap:
    # Specifies whether a configmap should be created
    create: true


  elastic:
    # -- Should elastic be enabled or not
    enabled: false
    security:
      # -- Information about the transport layer security (TLS)
      tls:
        # -- Encryption for the REST requests made to the Elastic cluster
        restEncryption: false

countryRiskBackend:
  replicaCount: 1

  image:
    registry: "tractusx"
    # -- Name of the docker image
    name: "vas-country-risk-backend"
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: ""

  certificate:
    # -- Hostname for the certificate
    host: "localhost"

  # -- Name of the backend service
  appName: vas-country-risk-backend

  # -- List of secrets to be used
  imagePullSecrets: []
  # -- Annotations to be added to the running pod
  podAnnotations: {}

  # -- Configuration for security-related options of the running pod
  podSecurityContext:
    # -- Set the file system group ID for all containers in the pod
    fsGroup: 2000

  # Spring profiles under which the application should run
  springProfiles:
    - dev

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  securityContext:
    # -- Specifies if processes running inside the container can gain more privileges than its initial user
    allowPrivilegeEscalation: false
    # -- Specifies whether the process inside the container should run as a non-root user
    runAsNonRoot: true
    # -- Specifies the user ID that the process inside the container should run
    runAsUser: 10001
    # -- Specifies the group ID that the process inside the container should run
    runAsGroup: 3000
    # -- Specifies Seccomp profile
    seccompProfile:
      type: RuntimeDefault
    # -- Capabilities that the process inside the container should have
    capabilities:
      drop:
        - ALL

  # -- Service that should be created for the pod
  service:
    # -- Type of service to be used
    type: ClusterIP
    # -- Service port
    port: 8080

  # -- Specifies whether autoscaling should be enabled for the pod
  autoscaling:
    enabled: false

  ingress:
    # -- Class name
    className: ""
    # -- Ingress enabled or not
    enabled: false
    annotations: {}

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
  resources:
    # -- Maximum amount of resources that the deployment should be able to consume
    limits:
      cpu: 800m
      memory: 2Gi
    # -- Minimum amount of resources that the deployment should be guaranteed to receive
    requests:
      cpu: 300m
      memory: 1Gi

  # -- Node placement constraints
  nodeSelector: {}

  # -- Pod toleration constraints
  tolerations: []

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                # -- Match Pod rules
                - key: app.kubernetes.io/name
                  operator: DoesNotExist
            # -- Key that is used to determine the topology of the cluster
            topologyKey: kubernetes.io/hostname

  # Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
  # @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
  # -- Determines if a pod is still alive or not
  livenessProbe:
    failureThreshold: 3
    # -- Number of seconds to wait before performing the first liveness probe
    initialDelaySeconds: 60
    # -- Number of seconds to wait between consecutive probes
    periodSeconds: 10
    # -- Number of consecutive successful probes before a pod is considered healthy
    successThreshold: 1
    # -- Number of seconds after which a liveness probe times out
    timeoutSeconds: 1
    # -- HTTP endpoint
    path: /management/health/liveness
    # -- Port used
    port: 8080
  # -- Determine when a pod is ready to start accepting requests
  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    path: /management/health/readiness
    port: 8080

  # -- Defines the client secret and client ID
  applicationSecret:
    # -- Value that specifies whether the application secret should be used
    enabled: true
    # -- String value that represents the client secret
    clientSecret: ""  #
    # -- String value that represents the client ID
    clientId: ""  #
    # -- String value that represents the client secret gate app
    gateClientSecret: ""  #
    # -- String value that represents the client ID gate app
    gateClientId: ""  #
    # -- String value that represents the client secret for pool app
    poolClientSecret: ""  #
    # -- String value that represents the client ID for pool app
    poolClientId: ""  #
    # -- String value that represents the api key to Use Edc endpoints
    edcApiKey: ""  #

  configmap:
    # Specifies whether a configmap should be created
    create: true
    data:
      # -- Which profile should be activated for the application
      spring_profiles_active: 'dev'
      # -- Security configurations for the application
      security_enabled: 'false'
      # -- Endpoints for BPDM output gate
      application_bpdm_addressUrl: http://localhost:8080/api/catena/output/addresses/search?
      application_bpdm_siteUrl: http://localhost:8080/api/catena/output/sites/search?
      application_bpdm_legalUrl: http://localhost:8080/api/catena/output/legal-entities/search?
      application_bpdm_genericUrl: http://localhost:8080/api/catena/output/generic/search?
      application_bpdm_consumerManagementUrl: http://localhost:8080/consumerManagementUrl?
      application_bpdm_gateProviderProtocolUrl: http://localhost:8080/gateProviderProtocolUrl?
      application_bpdm_gateProviderId: BPNL0000000XXX
      application_bpdm_policyBpn: BPNL0000000XXX
      application_edc_enabled: 'false'
      vas_auth_url: http://localhost:8081

  elastic:
    # -- Should elastic be enabled or not
    enabled: false
    security:
      # -- Information about the transport layer security (TLS)
      tls:
        # -- Encryption for the REST requests made to the Elastic cluster
        restEncryption: false

postgres:
  enabled: true
  auth:
    database: vas
    username: vas
    password: ""


pgadmin4:
  # -- Should pgadmin4 be enabled or not
  enabled: false
  env:
    # -- Email used on the Env environment
    email: ""
    password: ""
