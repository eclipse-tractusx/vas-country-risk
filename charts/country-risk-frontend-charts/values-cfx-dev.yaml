replicaCount: 1

image:
  registry: "ghcr.io"
  # -- Name of the docker image
  name: "catenax-ng/tx-vas-country-risk-frontend"
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

certificate:
  # -- Hostname for the certificate
  host: "country-risk-dashboard.dev.cofinity-x.com"

# -- Name of the backend service
appName: vas-country-risk-frontend

# -- List of secrets to be used
imagePullSecrets: []
# -- Annotations to be added to the running pod
podAnnotations: {}

# -- Configuration for security-related options of the running pod
podSecurityContext:
  # -- Set the file system group ID for all containers in the pod
  fsGroup: 2000


# @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  # -- Specifies if processes running inside the container can gain more privileges than its initial user
  allowPrivilegeEscalation: false
  # -- Specifies whether the process inside the container should run as a non-root user
  runAsNonRoot: true
  # -- Specifies the user ID that the process inside the container should run
  runAsUser: 101
  # -- Specifies the group ID that the process inside the container should run
  runAsGroup: 3000
  # -- Capabilities that the process inside the container should have
  capabilities:
    drop:
    - ALL

# -- Service that should be created for the pod
service:
  # -- Type of service to be used
  type: ClusterIP
  # -- Service port
  port: 8080

# -- Specifies whether autoscaling should be enabled for the pod
autoscaling:
  enabled: false



ingress:
  # -- Ingress enabled or not
  enabled: true
  # -- Class name
  className: nginx
  annotations:
    # -- HTTP traffic should be redirected to HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # -- Ingress controller should pass SSL traffic directly to the backend pods
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"




# @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          # -- Match Pod rules
          - key: app.kubernetes.io/name
            operator: DoesNotExist
        # -- Key that is used to determine the topology of the cluster
        topologyKey: kubernetes.io/hostname


configmap:
  # Specifies whether a configmap should be created
  create: true
  data:
    REACT_APP_AUTH_URL: 'https://centralidp.dev.cofinity-x.com/auth'
    REACT_APP_COUNTRY_RISK_API: 'https://vas-country-risk-backend.dev.cofinity-x.com'
    REACT_APP_PORTAL_FRONTEND: 'https://portal.dev.cofinity-x.com'
    REACT_APP_PORTAL_BACKEND: 'https://portal-backend.dev.cofinity-x.com'
