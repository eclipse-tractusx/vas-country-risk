# Default values for vas.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas of a Kubernetes deployment
replicaCount: 1

image:
  registry: "ghcr.io"
  # -- Name of the docker image
  name: "catenax-ng/tx-vas-country-risk-frontend"
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

certificate:
  # -- Hostname for the certificate
  host: "localhost"

# -- Name of the backend service
appName: vas-country-risk-frontend

# -- List of secrets to be used
imagePullSecrets: [ ]
# -- Annotations to be added to the running pod
podAnnotations: { }

# -- Configuration for security-related options of the running pod
podSecurityContext:
  # -- Set the file system group ID for all containers in the pod
  fsGroup: 2000

#Spring profiles under which the application should run
springProfiles:
  - dev

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  # -- Specifies if processes running inside the container can gain more privileges than its initial user
  allowPrivilegeEscalation: false
  # -- Specifies whether the process inside the container should run as a non-root user
  runAsNonRoot: true
  # -- Specifies the user ID that the process inside the container should run
  runAsUser: 10001
  # -- Specifies the group ID that the process inside the container should run
  runAsGroup: 3000
  # -- Capabilities that the process inside the container should have
  capabilities:
    drop:
      - ALL

# -- Service that should be created for the pod
service:
  # -- Type of service to be used
  type: ClusterIP
  # -- Service port
  port: 8080

# -- Specifies whether autoscaling should be enabled for the pod
autoscaling:
  enabled: false



ingress:
  # -- Ingress enabled or not
  enabled: false
  # -- Class name
  className: nginx
  annotations:
    # -- HTTP traffic should be redirected to HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # -- Ingress controller should pass SSL traffic directly to the backend pods
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"


# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
resources:
  # -- Maximum amount of resources that the deployment should be able to consume
  limits:
    cpu: 800m
    memory: 2Gi
  # -- Minimum amount of resources that the deployment should be guaranteed to receive
  requests:
    cpu: 300m
    memory: 1Gi

# -- Node placement constraints
nodeSelector: { }

# -- Pod toleration constraints
tolerations: [ ]

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
                # -- Match Pod rules
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          # -- Key that is used to determine the topology of the cluster
          topologyKey: kubernetes.io/hostname

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
# -- Determines if a pod is still alive or not
livenessProbe:
  failureThreshold: 3
  # -- Number of seconds to wait before performing the first liveness probe
  initialDelaySeconds: 10
  # -- Number of seconds to wait between consecutive probes
  periodSeconds: 1000
  # -- Number of consecutive successful probes before a pod is considered healthy
  successThreshold: 1
  # -- Number of seconds after which a liveness probe times out
  timeoutSeconds: 1000
# -- Determine when a pod is ready to start accepting requests
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 1000
  successThreshold: 1
  timeoutSeconds: 1000

# -- Defines the client secret and client ID
applicationSecret:
  enabled: false

configmap:
  # Specifies whether a configmap should be created
  create: true


elastic:
  # -- Should elastic be enabled or not
  enabled: false
  security:
    # -- Information about the transport layer security (TLS)
    tls:
      # -- Encryption for the REST requests made to the Elastic cluster
      restEncryption: false

